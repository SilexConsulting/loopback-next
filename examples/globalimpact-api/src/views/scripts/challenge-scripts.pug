script.

  var renderChallenges = function (challenges) {
    jQuery('#challenge-list-active').empty();
    jQuery('#challenge-list-archived').empty();
    var activeTotal = 0;
    var archivedTotal = 0;
    var container;
    challenges.forEach(function (challenge) {

      if (challenge.archived) {
        container = jQuery('#challenge-list-archived');
        archivedTotal++;
      } else {
        container = jQuery('#challenge-list-active');
        activeTotal++;
      }

      container.append(`<tr><td>${challenge.id}</td><td><img style="width: 40px" src="/api/ProfilePicture/${challenge.badge}" /></td><td style="white-space: nowrap">${challenge.name}</td><td>${challenge.shortDescription}<br/><small class="py-2 d-block">${challenge.description.substr(1, 200) + '...'}</small></td><td class="text-right"><button onClick="archiveChallenge('${challenge.id}', ${!challenge.archived})" class="btn btn-outline-secondary"><i class="fa fa-archive"></i></button></td></tr>`);
    })

    jQuery('#activeTotal').html(activeTotal);
    jQuery('#archivedTotal').html(archivedTotal);
  }

  var fetchChallenges = function () {
    fetch('/api/challenges', {
      method: 'GET',
    }).then(function(response) {
      return response.json();
    })
    .then(function(response) {
      renderChallenges(response);
    })
  }

  var archiveChallenge = async function(challengeId, shouldArchive) {
    await fetch(`/api/challenges/${challengeId}`, {
      method: 'PATCH',
      body: JSON.stringify({
        archived: shouldArchive,
      }),
      headers: {
        'Content-Type': 'application/json',
      },
    });
    fetchChallenges();
  }

  var handleSubmit = async function (event) {
    event.preventDefault();

    var formData = new FormData(event.target)
    var formValues = Object.fromEntries(formData);
    var imagePayload = new FormData();
    imagePayload.append('badge', formValues.badge, `${formValues.name}_badge.png`);

    var fileResponse = await fetch('/api/ProfilePicture', {
      method: 'POST',
      body: imagePayload,
    });
    var parsedFileResponse = await fileResponse.json();

    formValues.badge = parsedFileResponse.files[0].originalname;
    formValues.archived = false;
    let response = await fetch('/api/challenges', {
      method: 'POST',
      body: JSON.stringify(formValues),
      headers: {
        'Content-Type': 'application/json',
      },
    });

    let result = await response.json();
    fetchChallenges();
  }

  fetchChallenges();
  jQuery(document).on('submit', 'form', handleSubmit);
