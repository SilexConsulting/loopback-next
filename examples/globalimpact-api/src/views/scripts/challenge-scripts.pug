script.

  var renderChallenges = function (challenges) {
    jQuery('#challenge-list-active').empty();
    jQuery('#challenge-list-archived').empty();
    var activeTotal = 0;
    var archivedTotal = 0;
    var container;
    challenges.forEach(function (challenge) {

      if (challenge.archived) {
        container = jQuery('#challenge-list-archived');
        archivedTotal++;
      } else {
        container = jQuery('#challenge-list-active');
        activeTotal++;
      }

      container.append(`<tr><td>${challenge.id}</td><td><img style="width: 40px" src="/api/ProfilePicture/${challenge.badge}" /></td><td style="white-space: nowrap">${challenge.name}</td><td>${challenge.shortDescription}<br/><small class="py-2 d-block">${challenge.description.substr(1, 200) + '...'}</small></td><td class="text-right"><div class="btn-group"><a onClick="archiveChallenge(${challenge.id}, ${!challenge.archived})" class="btn btn-primary text-white"><i class="fa fa-archive"></i></a><a href="challenges/${challenge.id}" class="btn btn-primary"><i class="fa fa-pencil"></i></a></div></td></tr>`);
    })

    jQuery('#activeTotal').html(activeTotal);
    jQuery('#archivedTotal').html(archivedTotal);
  }

  var $levelWrapper = $('#challenge-levels')
  var renderChallengeLevels = function (challenge) {
    if (challenge.challengeLevels) {
      var $challengeLevelWrapper = $('#challenge-levels');
      $challengeLevelWrapper.empty();
      challenge.challengeLevels.forEach(function(level, index) {
        $challengeLevelWrapper.append(`
        <form class="card">
          <div class="card-body">
            <div class="form-group row">
              <label class="col-form-label col-sm-2">Name</label>
              <div class="col-sm-10">
                <input class="form-control" type="text" name="level_${index}_name" placeholder="Level name" value="${level.name}" />
              </div>
            </div>
            <div class="form-group row">
              <label class="col-form-label col-sm-2">Description</label>
              <div class="col-sm-10">
                <input class="form-control" type="text" name="level_${index}_description" placeholder="Level Description" value="${level.description}" />
              </div>
            </div>
          </div>
        </form>`)
      })
    }
  }
  var createChallengeLevel = async function (challengeId, formValues) {
    var response = await fetch(`/api/challenges/${challengeId}/challenge-levels`, {
      method: 'POST',
      body: JSON.stringify(formValues),
      headers: {
        'Content-Type': 'application/json',
      },
    })
    var parsed = await response.json();
    return parsed;
  }


  var fetchChallenges = async function () {
    var response = await fetch(`/api/challenges`, {
      method: 'GET',
    })
    var parsed = await response.json();
    return parsed;
  }

  var fetchChallenge = async function (challengeId) {
    var params = {
      "include": [
        { relation: "challengeLevels" }
      ]
    }
    var response = await fetch(`/api/challenges/${challengeId}?filter=${JSON.stringify(params)}`, {
      method: 'GET',
    })
    var parsed = await response.json();
    return parsed;
  }

  var updateEditForm = function (challenge) {
    var $title = $('#challenge-title');
    var $name = $('#challenge-name');
    var $shortDescription = $('#challenge-short-desc');
    var $description = $('#challenge-desc');
    var $badgeImg = $('#challenge-badge-img');

    $title.html(challenge.name);
    $name.val(challenge.name);
    $shortDescription.val(challenge.shortDescription);
    $description.val(challenge.description);
    $badgeImg.attr('src', `/api/ProfilePicture/${challenge.badge}?${Math.random().toString(36).substring(7)}`);

  }

  var archiveChallenge = async function(challengeId, shouldArchive) {
    await fetch(`/api/challenges/${challengeId}`, {
      method: 'PATCH',
      body: JSON.stringify({
        archived: shouldArchive,
      }),
      headers: {
        'Content-Type': 'application/json',
      },
    });
    fetchChallenges().then(function(challenges) {
      renderChallenges(challenges)
    });
  }

  var uploadBadge = async function (badge, name) {
    var imagePayload = new FormData();
    imagePayload.append('badge', badge, `${name}_badge.png`);

    var fileResponse = await fetch('/api/ProfilePicture', {
      method: 'POST',
      body: imagePayload,
    });
    var parsedResponse = await fileResponse.json();
    return parsedResponse;
  }

  var updateChallenge = async function (challenge, id) {
    return await fetch(`/api/challenges/${id}`, {
      method: 'PATCH',
      body: JSON.stringify(challenge),
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }

  var createChallenge = async function (formValues) {
    formValues.archived = false;
    let response = await fetch('/api/challenges', {
      method: 'POST',
      body: JSON.stringify(formValues),
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }
